#docker-compose up --build
version: "3.9"

services:

    minio:
        image: minio/minio
        hostname: minio
        ports:
            - "9000:9000"
            - "9001:9001"
        volumes:
            - minio_storage:/data
        environment:
            MINIO_ROOT_USER: bykresizer
            MINIO_ROOT_PASSWORD: bykbykbyk
        command: server --console-address ":9001" /data

    nginx:
        build: nginx/.
        ports:
            - 8079:80
            - 4000:4000
            - 5000:5000
        depends_on:
            minio:
                condition: service_started
            asp_1:
                condition: service_started
            api_1:
                condition: service_started
            api_2:
                condition: service_started

    asp_1:
        build:
            context: ResizerASPNET/.
            dockerfile: ./ResizerASPNET/Dockerfile
        depends_on:
            minio:
                condition: service_started
            rabbit:
                condition: service_healthy
        environment:
            API_ENDPOINT: nginx:4000
            RABBIT_USER: bykrabbit
            RABBIT_PASSWORD: bykbykbyk
            RABBIT_HOST: rabbit
            MINIO_NGINX_ENDPOINT: localhost:8079
            MINIO_ENDPOINT: minio:9000
            MINIO_ROOT_USER: bykresizer
            MINIO_ROOT_PASSWORD: bykbykbyk
            BUCKET_NAME: cropper
            NAME: asp_1
        expose:
            - 80
            - 443
            
    # asp_2:
        # build:
            # context: ResizerASPNET/.
            # dockerfile: ./ResizerASPNET/Dockerfile
        # depends_on:
            # minio:
                # condition: service_started
            # rabbit:
                # condition: service_healthy
        # environment:
            # API_ENDPOINT: api_2:80
            # RABBIT_USER: bykrabbit
            # RABBIT_PASSWORD: bykbykbyk
            # RABBIT_HOST: rabbit
            # MINIO_NGINX_ENDPOINT: localhost:8079
            # MINIO_ENDPOINT: minio:9000
            # MINIO_ROOT_USER: bykresizer
            # MINIO_ROOT_PASSWORD: bykbykbyk
            # BUCKET_NAME: cropper
            # NAME: asp_2
        # expose:
            # - 80
            # - 443

    api_1:
        build:
            context: ResizerAPI/.
            dockerfile: ./ResizerAPI/Dockerfile
        depends_on:
            minio:
                condition: service_started
            rabbit:
                condition: service_healthy
        expose:
            - 80
            - 443
        environment:
            RABBIT_USER: bykrabbit
            RABBIT_PASSWORD: bykbykbyk
            RABBIT_HOST: rabbit
            MINIO_NGINX_ENDPOINT: localhost:8079
            MINIO_ENDPOINT: minio:9000
            MINIO_ROOT_USER: bykresizer
            MINIO_ROOT_PASSWORD: bykbykbyk
            BUCKET_NAME: cropper
            NAME: api_1
            
    api_2:
        build:
            context: ResizerAPI/.
            dockerfile: ./ResizerAPI/Dockerfile
        depends_on:
            minio:
                condition: service_started
            rabbit:
                condition: service_healthy
        expose:
            - 80
            - 443
        environment:
            RABBIT_USER: bykrabbit
            RABBIT_PASSWORD: bykbykbyk
            RABBIT_HOST: rabbit
            MINIO_NGINX_ENDPOINT: localhost:8079
            MINIO_ENDPOINT: minio:9000
            MINIO_ROOT_USER: bykresizer
            MINIO_ROOT_PASSWORD: bykbykbyk
            BUCKET_NAME: cropper
            NAME: api_2

    api_3:
        build:
            context: ResizerAPI/.
            dockerfile: ./ResizerAPI/Dockerfile
        depends_on:
            minio:
                condition: service_started
            rabbit:
                condition: service_healthy
        expose:
            - 80
            - 443
        environment:
            RABBIT_USER: bykrabbit
            RABBIT_PASSWORD: bykbykbyk
            RABBIT_HOST: rabbit
            MINIO_NGINX_ENDPOINT: localhost:8079
            MINIO_ENDPOINT: minio:9000
            MINIO_ROOT_USER: bykresizer
            MINIO_ROOT_PASSWORD: bykbykbyk
            BUCKET_NAME: cropper
            NAME: api_3

    rabbit:
        image: rabbitmq:management
        hostname: rabbit
        environment:
            RABBITMQ_DEFAULT_USER: bykrabbit
            RABBITMQ_DEFAULT_PASS: bykbykbyk
        ports:
            - 5672:5672
            - 15672:15672
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 30s
            timeout: 30s
            retries: 3

volumes:
    minio_storage: {}
  